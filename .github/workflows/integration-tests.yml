name: Integration Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run unit tests
      run: cargo test
    
    - name: Build release binary
      run: cargo build --release
    
    - name: Verify binary exists
      run: |
        ls -la target/release/
        file target/release/zipget
        ./target/release/zipget --version
    
    - name: Set up Python for test runner
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Run comprehensive integration test suite
      run: |
        echo "Running comprehensive Python test suite..."
        python3 test/test-suite.py
    
    - name: Final validation summary
      run: |
        echo "=== FINAL VALIDATION SUMMARY ==="
        if [ -d "test-downloads" ]; then
          echo "Downloaded files count: $(ls -1 test-downloads/*.zip 2>/dev/null | wc -l)"
          echo "Total downloaded size: $(du -sh test-downloads/ 2>/dev/null | cut -f1 || echo 'N/A')"
        else
          echo "Downloaded files count: 0 (test-downloads directory not found)"
        fi
        
        if [ -d "test-output" ]; then
          echo "Extracted directories count: $(ls -1d test-output/*/ 2>/dev/null | wc -l)"
          echo "Total extracted size: $(du -sh test-output/ 2>/dev/null | cut -f1 || echo 'N/A')"
        else
          echo "Extracted directories count: 0 (test-output directory not found)"
        fi
        
        echo ""
        if [ -d "test-downloads" ] && [ -d "test-output" ]; then
          echo "Integration tests completed! 🎉"
        else
          echo "Integration tests may have failed - check test output above ⚠️"
        fi
    
    - name: Upload test artifacts on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-artifacts
        path: |
          test-downloads/
          test-output/
          *.zip
        retention-days: 7
    
    - name: Generate test report
      if: always()
      run: |
        echo "## Integration Test Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "test-downloads" ]; then
          echo "### Downloaded Files" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -lah test-downloads/ 2>/dev/null >> $GITHUB_STEP_SUMMARY || echo "No files found" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Downloaded Files" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "test-downloads/ directory not found - test may have failed" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "test-output" ]; then
          echo "### Extracted Directories" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -lah test-output/ 2>/dev/null >> $GITHUB_STEP_SUMMARY || echo "No directories found" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Extracted Directories" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "test-output/ directory not found - test may have failed" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        if [ -d "test-downloads" ] && [ -d "test-output" ]; then
          echo "✅ Test directories found - integration tests appear to have run"
          du -sh test-downloads/ test-output/ 2>/dev/null || echo "Could not determine directory sizes"
        else
          echo "❌ Missing test directories - integration tests may have failed"
          echo "Check the 'Run comprehensive integration test suite' step above for details"
        fi
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY 